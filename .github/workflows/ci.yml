name: CI/CD Spring Boot to Docker Hub

on:
  push:
    branches:
      - main
      - developpement
  pull_request:
    branches:
      - main
      - developpement

jobs:
  build_and_test: # Renommé pour plus de clarté
    runs-on: ubuntu-latest
    outputs: # Pour passer des informations à d'autres jobs si besoin (non utilisé ici mais bonne pratique)
      image_tag: ${{ steps.image_metadata.outputs.version }} # Exemple de sortie

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4 # Version plus récente

      - name: Configuration de Java 17
        uses: actions/setup-java@v4 # Version plus récente
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven' # Utilise le cache Maven intégré à setup-java

      - name: Compilation et tests Maven
        run: mvn clean verify --batch-mode -e

      # Cette étape est facultative ici car on construit l'image dans le job suivant
      # Mais si vous vouliez un artefact JAR, vous pourriez le garder et le télécharger
      # - name: Package application (Skip tests as they ran in 'verify')
      #   run: mvn package -DskipTests --batch-mode

  build_and_push_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build_and_test # Ce job ne s'exécute que si build_and_test réussit
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/developpement') # Ne pousse que sur un push vers main ou developpement

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Set up QEMU # Nécessaire pour les builds multi-plateformes (facultatif si vous ne ciblez qu'une plateforme)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx # Outil de build avancé de Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5 # Action pour générer des tags et labels pertinents
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/club-plus-backend # ex: votrenomdocker/nomdurepo
          # Génère des tags :
          # - 'latest' pour la branche main
          # - nom de la branche pour les autres branches (ex: 'developpement')
          # - SHA du commit
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6 # Version plus récente
        with:
          context: . # Contexte de build (racine du dépôt où se trouve le Dockerfile)
          file: ./Dockerfile # Chemin vers votre Dockerfile (si ce n'est pas ./Dockerfile)
          push: true # Pousse l'image si le build réussit
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
